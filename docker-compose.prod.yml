services:
  postgres:
    image: postgres:15-alpine
    container_name: family_photo_share_postgres_prod
    environment:
      POSTGRES_DB: family_photo_share_production
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  redis:
    image: redis:7-alpine
    container_name: family_photo_share_redis_prod
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    command: ["redis-server", "--appendonly", "yes", "--maxmemory", "512mb", "--maxmemory-policy", "allkeys-lru"]
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  web:
    build: .
    container_name: family_photo_share_web_prod
    ports:
      - "80:80"
    environment:
      RAILS_ENV: production
      DATABASE_URL: postgresql://postgres:${POSTGRES_PASSWORD}@postgres:5432/family_photo_share_production
      REDIS_URL: redis://redis:6379/0
      RAILS_MASTER_KEY: ${RAILS_MASTER_KEY}
      RAILS_SERVE_STATIC_FILES: "true"
      RAILS_LOG_TO_STDOUT: "true"
    volumes:
      - rails_storage:/rails/storage
      - rails_logs:/rails/log
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/up"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Main Sidekiq worker for default jobs
  sidekiq:
    build: .
    container_name: family_photo_share_sidekiq_prod
    environment:
      RAILS_ENV: production
      DATABASE_URL: postgresql://postgres:${POSTGRES_PASSWORD}@postgres:5432/family_photo_share_production
      REDIS_URL: redis://redis:6379/0
      RAILS_MASTER_KEY: ${RAILS_MASTER_KEY}
      RAILS_LOG_TO_STDOUT: "true"
    volumes:
      - rails_storage:/rails/storage
      - rails_logs:/rails/log
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    command: ["bundle", "exec", "sidekiq", "-c", "5", "-v"]
    healthcheck:
      test: ["CMD", "bundle", "exec", "sidekiqctl", "quiet", "/tmp/sidekiq.pid"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Dedicated workers for image processing (CPU intensive)
  sidekiq_images:
    build: .
    container_name: family_photo_share_sidekiq_images_prod
    environment:
      RAILS_ENV: production
      DATABASE_URL: postgresql://postgres:${POSTGRES_PASSWORD}@postgres:5432/family_photo_share_production
      REDIS_URL: redis://redis:6379/0
      RAILS_MASTER_KEY: ${RAILS_MASTER_KEY}
      RAILS_LOG_TO_STDOUT: "true"
    volumes:
      - rails_storage:/rails/storage
      - rails_logs:/rails/log
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    command: ["bundle", "exec", "sidekiq", "-q", "image_processing", "-c", "4", "-v"]
    healthcheck:
      test: ["CMD", "bundle", "exec", "sidekiqctl", "quiet", "/tmp/sidekiq.pid"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  # Worker for bulk processing (lower priority, fewer resources)
  sidekiq_bulk:
    build: .
    container_name: family_photo_share_sidekiq_bulk_prod
    environment:
      RAILS_ENV: production
      DATABASE_URL: postgresql://postgres:${POSTGRES_PASSWORD}@postgres:5432/family_photo_share_production
      REDIS_URL: redis://redis:6379/0
      RAILS_MASTER_KEY: ${RAILS_MASTER_KEY}
      RAILS_LOG_TO_STDOUT: "true"
    volumes:
      - rails_storage:/rails/storage
      - rails_logs:/rails/log
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    command: ["bundle", "exec", "sidekiq", "-q", "bulk_processing", "-c", "2", "-v"]
    healthcheck:
      test: ["CMD", "bundle", "exec", "sidekiqctl", "quiet", "/tmp/sidekiq.pid"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

volumes:
  postgres_data:
  redis_data:
  rails_storage:
  rails_logs: